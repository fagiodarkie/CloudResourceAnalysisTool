Classfile /home/phagio/git/CloudResourceAnalysisTool/src/tests/sources/TestVMThreadExecutable.class
  Last modified Dec 11, 2015; size 1739 bytes
  MD5 checksum c8a6c9d63c7fe61713b339c3f36e9380
  Compiled from "TestVMThreadExecutable.java"
public class tests.sources.TestVMThreadExecutable
  SourceFile: "TestVMThreadExecutable.java"
  minor version: 0
  major version: 51
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
    #1 = Methodref          #25.#51       //  java/lang/Object."<init>":()V
    #2 = Class              #52           //  tests/sources/TestVMThreadExecutable$VM
    #3 = Methodref          #53.#54       //  java/lang/Math.random:()D
    #4 = Double             100.0d
    #6 = Methodref          #2.#55        //  tests/sources/TestVMThreadExecutable$VM."<init>":(Ltests/sources/TestVMThreadExecutable;I)V
    #7 = Fieldref           #56.#57       //  java/lang/System.out:Ljava/io/PrintStream;
    #8 = Class              #58           //  java/lang/StringBuilder
    #9 = Methodref          #8.#51        //  java/lang/StringBuilder."<init>":()V
   #10 = String             #59           //  released VM 
   #11 = Methodref          #8.#60        //  java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #12 = Fieldref           #2.#61        //  tests/sources/TestVMThreadExecutable$VM.id:I
   #13 = Methodref          #8.#62        //  java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #14 = Methodref          #8.#63        //  java/lang/StringBuilder.toString:()Ljava/lang/String;
   #15 = Methodref          #64.#65       //  java/io/PrintStream.println:(Ljava/lang/String;)V
   #16 = Methodref          #24.#66       //  tests/sources/TestVMThreadExecutable.createVM:()Ltests/sources/TestVMThreadExecutable$VM;
   #17 = Class              #67           //  tests/sources/TestVMThreadExecutable$T
   #18 = Methodref          #17.#68       //  tests/sources/TestVMThreadExecutable$T."<init>":(Ltests/sources/TestVMThreadExecutable;Ltests/sources/TestVMThreadExecutable$VM;)V
   #19 = Methodref          #69.#70       //  java/lang/Thread.run:()V
   #20 = Class              #71           //  java/lang/Exception
   #21 = Methodref          #24.#72       //  tests/sources/TestVMThreadExecutable.releaseVM:(Ltests/sources/TestVMThreadExecutable$VM;)V
   #22 = Methodref          #69.#73       //  java/lang/Thread.join:()V
   #23 = String             #74           //  alpha's id is 
   #24 = Class              #75           //  tests/sources/TestVMThreadExecutable
   #25 = Class              #76           //  java/lang/Object
   #26 = Utf8               T
   #27 = Utf8               InnerClasses
   #28 = Utf8               VM
   #29 = Utf8               <init>
   #30 = Utf8               ()V
   #31 = Utf8               Code
   #32 = Utf8               LineNumberTable
   #33 = Utf8               createVM
   #34 = Utf8               ()Ltests/sources/TestVMThreadExecutable$VM;
   #35 = Utf8               releaseVM
   #36 = Utf8               (Ltests/sources/TestVMThreadExecutable$VM;)V
   #37 = Utf8               main
   #38 = Utf8               ([Ljava/lang/String;)V
   #39 = Utf8               StackMapTable
   #40 = Class              #75           //  tests/sources/TestVMThreadExecutable
   #41 = Class              #77           //  "[Ljava/lang/String;"
   #42 = Class              #52           //  tests/sources/TestVMThreadExecutable$VM
   #43 = Class              #78           //  java/lang/Thread
   #44 = Class              #71           //  java/lang/Exception
   #45 = Class              #76           //  java/lang/Object
   #46 = Class              #79           //  java/lang/Throwable
   #47 = Utf8               Exceptions
   #48 = Class              #80           //  java/lang/InterruptedException
   #49 = Utf8               SourceFile
   #50 = Utf8               TestVMThreadExecutable.java
   #51 = NameAndType        #29:#30       //  "<init>":()V
   #52 = Utf8               tests/sources/TestVMThreadExecutable$VM
   #53 = Class              #81           //  java/lang/Math
   #54 = NameAndType        #82:#83       //  random:()D
   #55 = NameAndType        #29:#84       //  "<init>":(Ltests/sources/TestVMThreadExecutable;I)V
   #56 = Class              #85           //  java/lang/System
   #57 = NameAndType        #86:#87       //  out:Ljava/io/PrintStream;
   #58 = Utf8               java/lang/StringBuilder
   #59 = Utf8               released VM 
   #60 = NameAndType        #88:#89       //  append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #61 = NameAndType        #90:#91       //  id:I
   #62 = NameAndType        #88:#92       //  append:(I)Ljava/lang/StringBuilder;
   #63 = NameAndType        #93:#94       //  toString:()Ljava/lang/String;
   #64 = Class              #95           //  java/io/PrintStream
   #65 = NameAndType        #96:#97       //  println:(Ljava/lang/String;)V
   #66 = NameAndType        #33:#34       //  createVM:()Ltests/sources/TestVMThreadExecutable$VM;
   #67 = Utf8               tests/sources/TestVMThreadExecutable$T
   #68 = NameAndType        #29:#98       //  "<init>":(Ltests/sources/TestVMThreadExecutable;Ltests/sources/TestVMThreadExecutable$VM;)V
   #69 = Class              #78           //  java/lang/Thread
   #70 = NameAndType        #99:#30       //  run:()V
   #71 = Utf8               java/lang/Exception
   #72 = NameAndType        #35:#36       //  releaseVM:(Ltests/sources/TestVMThreadExecutable$VM;)V
   #73 = NameAndType        #100:#30      //  join:()V
   #74 = Utf8               alpha's id is 
   #75 = Utf8               tests/sources/TestVMThreadExecutable
   #76 = Utf8               java/lang/Object
   #77 = Utf8               [Ljava/lang/String;
   #78 = Utf8               java/lang/Thread
   #79 = Utf8               java/lang/Throwable
   #80 = Utf8               java/lang/InterruptedException
   #81 = Utf8               java/lang/Math
   #82 = Utf8               random
   #83 = Utf8               ()D
   #84 = Utf8               (Ltests/sources/TestVMThreadExecutable;I)V
   #85 = Utf8               java/lang/System
   #86 = Utf8               out
   #87 = Utf8               Ljava/io/PrintStream;
   #88 = Utf8               append
   #89 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #90 = Utf8               id
   #91 = Utf8               I
   #92 = Utf8               (I)Ljava/lang/StringBuilder;
   #93 = Utf8               toString
   #94 = Utf8               ()Ljava/lang/String;
   #95 = Utf8               java/io/PrintStream
   #96 = Utf8               println
   #97 = Utf8               (Ljava/lang/String;)V
   #98 = Utf8               (Ltests/sources/TestVMThreadExecutable;Ltests/sources/TestVMThreadExecutable$VM;)V
   #99 = Utf8               run
  #100 = Utf8               join
{
  public tests.sources.TestVMThreadExecutable();
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0       
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return        
      LineNumberTable:
        line 2: 0
        line 20: 4

  public tests.sources.TestVMThreadExecutable$VM createVM();
    flags: ACC_PUBLIC
    Code:
      stack=7, locals=1, args_size=1
         0: new           #2                  // class tests/sources/TestVMThreadExecutable$VM
         3: dup           
         4: aload_0       
         5: invokestatic  #3                  // Method java/lang/Math.random:()D
         8: ldc2_w        #4                  // double 100.0d
        11: dmul          
        12: d2i           
        13: invokespecial #6                  // Method tests/sources/TestVMThreadExecutable$VM."<init>":(Ltests/sources/TestVMThreadExecutable;I)V
        16: areturn       
      LineNumberTable:
        line 13: 0

  public void releaseVM(tests.sources.TestVMThreadExecutable$VM);
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
         3: new           #8                  // class java/lang/StringBuilder
         6: dup           
         7: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
        10: ldc           #10                 // String released VM 
        12: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        15: aload_1       
        16: getfield      #12                 // Field tests/sources/TestVMThreadExecutable$VM.id:I
        19: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        22: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        25: invokevirtual #15                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        28: return        
      LineNumberTable:
        line 17: 0
        line 18: 28

  public void main(java.lang.String[]) throws java.lang.InterruptedException;
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=7, args_size=2
         0: aload_0       
         1: invokevirtual #16                 // Method createVM:()Ltests/sources/TestVMThreadExecutable$VM;
         4: astore_2      
         5: new           #17                 // class tests/sources/TestVMThreadExecutable$T
         8: dup           
         9: aload_0       
        10: aload_2       
        11: invokespecial #18                 // Method tests/sources/TestVMThreadExecutable$T."<init>":(Ltests/sources/TestVMThreadExecutable;Ltests/sources/TestVMThreadExecutable$VM;)V
        14: astore_3      
        15: aload_3       
        16: invokevirtual #19                 // Method java/lang/Thread.run:()V
        19: iconst_1      
        20: iconst_0      
        21: idiv          
        22: istore        4
        24: goto          29
        27: astore        4
        29: aload_0       
        30: invokevirtual #16                 // Method createVM:()Ltests/sources/TestVMThreadExecutable$VM;
        33: astore        4
        35: aload_2       
        36: dup           
        37: astore        5
        39: monitorenter  
        40: aload_0       
        41: aload_2       
        42: invokevirtual #21                 // Method releaseVM:(Ltests/sources/TestVMThreadExecutable$VM;)V
        45: aload         5
        47: monitorexit   
        48: goto          59
        51: astore        6
        53: aload         5
        55: monitorexit   
        56: aload         6
        58: athrow        
        59: aload_3       
        60: invokevirtual #22                 // Method java/lang/Thread.join:()V
        63: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
        66: new           #8                  // class java/lang/StringBuilder
        69: dup           
        70: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
        73: ldc           #23                 // String alpha's id is 
        75: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        78: aload_2       
        79: getfield      #12                 // Field tests/sources/TestVMThreadExecutable$VM.id:I
        82: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        85: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        88: invokevirtual #15                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        91: aload_0       
        92: aload         4
        94: invokevirtual #21                 // Method releaseVM:(Ltests/sources/TestVMThreadExecutable$VM;)V
        97: return        
      Exception table:
         from    to  target type
            19    24    27   Class java/lang/Exception
            40    48    51   any
            51    56    51   any
      LineNumberTable:
        line 47: 0
        line 48: 5
        line 49: 15
        line 51: 19
        line 54: 24
        line 52: 27
        line 55: 29
        line 56: 35
        line 57: 40
        line 58: 45
        line 59: 59
        line 60: 63
        line 61: 91
        line 64: 97
      StackMapTable: number_of_entries = 4
           frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [ class tests/sources/TestVMThreadExecutable, class "[Ljava/lang/String;", class tests/sources/TestVMThreadExecutable$VM, class java/lang/Thread ]
          stack = [ class java/lang/Exception ]
           frame_type = 1 /* same */
           frame_type = 255 /* full_frame */
          offset_delta = 21
          locals = [ class tests/sources/TestVMThreadExecutable, class "[Ljava/lang/String;", class tests/sources/TestVMThreadExecutable$VM, class java/lang/Thread, class tests/sources/TestVMThreadExecutable$VM, class java/lang/Object ]
          stack = [ class java/lang/Throwable ]
           frame_type = 250 /* chop */
          offset_delta = 7

    Exceptions:
      throws java.lang.InterruptedException
}
