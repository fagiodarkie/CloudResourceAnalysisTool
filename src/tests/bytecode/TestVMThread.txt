Classfile /home/phagio/git/CloudResourceAnalysisTool/src/tests/sources/TestVMThread.class
  Last modified Dec 11, 2015; size 1152 bytes
  MD5 checksum 23776d3a07ef6d657236f2013ff33d6e
  Compiled from "TestVMThread.java"
public class tests.sources.TestVMThread
  SourceFile: "TestVMThread.java"
  InnerClasses:
       static #12 of #10; //class tests/sources/TestVMThread$1 of class tests/sources/TestVMThread
  minor version: 0
  major version: 51
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #11.#38        //  java/lang/Object."<init>":()V
   #2 = Class              #39            //  tests/sources/TestVMThread$VM
   #3 = Methodref          #2.#40         //  tests/sources/TestVMThread$VM."<init>":(Ltests/sources/TestVMThread;Ltests/sources/TestVMThread$1;)V
   #4 = Methodref          #10.#41        //  tests/sources/TestVMThread.createVM:()Ltests/sources/TestVMThread$VM;
   #5 = Class              #42            //  tests/sources/TestVMThread$T
   #6 = Methodref          #5.#43         //  tests/sources/TestVMThread$T."<init>":(Ltests/sources/TestVMThread;Ltests/sources/TestVMThread$VM;)V
   #7 = Methodref          #44.#45        //  java/lang/Thread.run:()V
   #8 = Methodref          #10.#46        //  tests/sources/TestVMThread.releaseVM:(Ltests/sources/TestVMThread$VM;)V
   #9 = Methodref          #44.#47        //  java/lang/Thread.join:()V
  #10 = Class              #48            //  tests/sources/TestVMThread
  #11 = Class              #49            //  java/lang/Object
  #12 = Class              #50            //  tests/sources/TestVMThread$1
  #13 = Utf8               
  #14 = Utf8               InnerClasses
  #15 = Utf8               T
  #16 = Utf8               VM
  #17 = Utf8               <init>
  #18 = Utf8               ()V
  #19 = Utf8               Code
  #20 = Utf8               LineNumberTable
  #21 = Utf8               createVM
  #22 = Utf8               ()Ltests/sources/TestVMThread$VM;
  #23 = Utf8               releaseVM
  #24 = Utf8               (Ltests/sources/TestVMThread$VM;)V
  #25 = Utf8               main
  #26 = Utf8               ([Ljava/lang/String;)V
  #27 = Utf8               StackMapTable
  #28 = Class              #48            //  tests/sources/TestVMThread
  #29 = Class              #51            //  "[Ljava/lang/String;"
  #30 = Class              #39            //  tests/sources/TestVMThread$VM
  #31 = Class              #52            //  java/lang/Thread
  #32 = Class              #49            //  java/lang/Object
  #33 = Class              #53            //  java/lang/Throwable
  #34 = Utf8               Exceptions
  #35 = Class              #54            //  java/lang/InterruptedException
  #36 = Utf8               SourceFile
  #37 = Utf8               TestVMThread.java
  #38 = NameAndType        #17:#18        //  "<init>":()V
  #39 = Utf8               tests/sources/TestVMThread$VM
  #40 = NameAndType        #17:#55        //  "<init>":(Ltests/sources/TestVMThread;Ltests/sources/TestVMThread$1;)V
  #41 = NameAndType        #21:#22        //  createVM:()Ltests/sources/TestVMThread$VM;
  #42 = Utf8               tests/sources/TestVMThread$T
  #43 = NameAndType        #17:#56        //  "<init>":(Ltests/sources/TestVMThread;Ltests/sources/TestVMThread$VM;)V
  #44 = Class              #52            //  java/lang/Thread
  #45 = NameAndType        #57:#18        //  run:()V
  #46 = NameAndType        #23:#24        //  releaseVM:(Ltests/sources/TestVMThread$VM;)V
  #47 = NameAndType        #58:#18        //  join:()V
  #48 = Utf8               tests/sources/TestVMThread
  #49 = Utf8               java/lang/Object
  #50 = Utf8               tests/sources/TestVMThread$1
  #51 = Utf8               [Ljava/lang/String;
  #52 = Utf8               java/lang/Thread
  #53 = Utf8               java/lang/Throwable
  #54 = Utf8               java/lang/InterruptedException
  #55 = Utf8               (Ltests/sources/TestVMThread;Ltests/sources/TestVMThread$1;)V
  #56 = Utf8               (Ltests/sources/TestVMThread;Ltests/sources/TestVMThread$VM;)V
  #57 = Utf8               run
  #58 = Utf8               join
{
  public tests.sources.TestVMThread();
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0       
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return        
      LineNumberTable:
        line 2: 0
        line 13: 4

  public tests.sources.TestVMThread$VM createVM();
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #2                  // class tests/sources/TestVMThread$VM
         3: dup           
         4: aload_0       
         5: aconst_null   
         6: invokespecial #3                  // Method tests/sources/TestVMThread$VM."<init>":(Ltests/sources/TestVMThread;Ltests/sources/TestVMThread$1;)V
         9: areturn       
      LineNumberTable:
        line 8: 0

  public void releaseVM(tests.sources.TestVMThread$VM);
    flags: ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return        
      LineNumberTable:
        line 11: 0

  public void main(java.lang.String[]) throws java.lang.InterruptedException;
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=7, args_size=2
         0: aload_0       
         1: invokevirtual #4                  // Method createVM:()Ltests/sources/TestVMThread$VM;
         4: astore_2      
         5: new           #5                  // class tests/sources/TestVMThread$T
         8: dup           
         9: aload_0       
        10: aload_2       
        11: invokespecial #6                  // Method tests/sources/TestVMThread$T."<init>":(Ltests/sources/TestVMThread;Ltests/sources/TestVMThread$VM;)V
        14: astore_3      
        15: aload_3       
        16: invokevirtual #7                  // Method java/lang/Thread.run:()V
        19: aload_0       
        20: invokevirtual #4                  // Method createVM:()Ltests/sources/TestVMThread$VM;
        23: astore        4
        25: aload_2       
        26: dup           
        27: astore        5
        29: monitorenter  
        30: aload_0       
        31: aload_2       
        32: invokevirtual #8                  // Method releaseVM:(Ltests/sources/TestVMThread$VM;)V
        35: aload         5
        37: monitorexit   
        38: goto          49
        41: astore        6
        43: aload         5
        45: monitorexit   
        46: aload         6
        48: athrow        
        49: aload_3       
        50: invokevirtual #9                  // Method java/lang/Thread.join:()V
        53: aload_0       
        54: aload         4
        56: invokevirtual #8                  // Method releaseVM:(Ltests/sources/TestVMThread$VM;)V
        59: aload_0       
        60: aload_2       
        61: invokevirtual #8                  // Method releaseVM:(Ltests/sources/TestVMThread$VM;)V
        64: return        
      Exception table:
         from    to  target type
            30    38    41   any
            41    46    41   any
      LineNumberTable:
        line 34: 0
        line 35: 5
        line 36: 15
        line 37: 19
        line 38: 25
        line 39: 30
        line 40: 35
        line 41: 49
        line 42: 53
        line 43: 59
        line 45: 64
      StackMapTable: number_of_entries = 2
           frame_type = 255 /* full_frame */
          offset_delta = 41
          locals = [ class tests/sources/TestVMThread, class "[Ljava/lang/String;", class tests/sources/TestVMThread$VM, class java/lang/Thread, class tests/sources/TestVMThread$VM, class java/lang/Object ]
          stack = [ class java/lang/Throwable ]
           frame_type = 250 /* chop */
          offset_delta = 7

    Exceptions:
      throws java.lang.InterruptedException
}
