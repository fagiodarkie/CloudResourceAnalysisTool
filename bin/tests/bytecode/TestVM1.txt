Classfile /home/phagio/Desktop/ASP/OtherJavaTests/TestVM1.class
  Last modified Nov 28, 2015; size 653 bytes
  MD5 checksum ecbeac21a2cd49390417289d5618c272
  Compiled from "Test3-vm.java"
class TestVM1
  SourceFile: "Test3-vm.java"
  InnerClasses:
       static #8 of #6; //class TestVM1$1 of class TestVM1
  minor version: 0
  major version: 51
  flags: ACC_SUPER
Constant pool:
   #1 = Methodref          #7.#26         //  java/lang/Object."<init>":()V
   #2 = Class              #27            //  TestVM1$VM
   #3 = Methodref          #2.#28         //  TestVM1$VM."<init>":(LTestVM1;LTestVM1$1;)V
   #4 = Methodref          #6.#29         //  TestVM1.createVM:()LTestVM1$VM;
   #5 = Methodref          #6.#30         //  TestVM1.releaseVM:(LTestVM1$VM;)V
   #6 = Class              #31            //  TestVM1
   #7 = Class              #32            //  java/lang/Object
   #8 = Class              #33            //  TestVM1$1
   #9 = Utf8               
  #10 = Utf8               InnerClasses
  #11 = Utf8               VM
  #12 = Utf8               <init>
  #13 = Utf8               ()V
  #14 = Utf8               Code
  #15 = Utf8               LineNumberTable
  #16 = Utf8               createVM
  #17 = Utf8               ()LTestVM1$VM;
  #18 = Utf8               releaseVM
  #19 = Utf8               (LTestVM1$VM;)V
  #20 = Utf8               main
  #21 = Utf8               ([Ljava/lang/String;)V
  #22 = Utf8               StackMapTable
  #23 = Class              #27            //  TestVM1$VM
  #24 = Utf8               SourceFile
  #25 = Utf8               Test3-vm.java
  #26 = NameAndType        #12:#13        //  "<init>":()V
  #27 = Utf8               TestVM1$VM
  #28 = NameAndType        #12:#34        //  "<init>":(LTestVM1;LTestVM1$1;)V
  #29 = NameAndType        #16:#17        //  createVM:()LTestVM1$VM;
  #30 = NameAndType        #18:#19        //  releaseVM:(LTestVM1$VM;)V
  #31 = Utf8               TestVM1
  #32 = Utf8               java/lang/Object
  #33 = Utf8               TestVM1$1
  #34 = Utf8               (LTestVM1;LTestVM1$1;)V
{
  TestVM1();
    flags: 
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0       
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return        
      LineNumberTable:
        line 1: 0
        line 3: 4

  public TestVM1$VM createVM();
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #2                  // class TestVM1$VM
         3: dup           
         4: aload_0       
         5: aconst_null   
         6: invokespecial #3                  // Method TestVM1$VM."<init>":(LTestVM1;LTestVM1$1;)V
         9: areturn       
      LineNumberTable:
        line 7: 0

  public void releaseVM(TestVM1$VM);
    flags: ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return        
      LineNumberTable:
        line 12: 0

  public void main(java.lang.String[]);
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: iconst_3      
         1: istore_2      
         2: aload_0       
         3: invokevirtual #4                  // Method createVM:()LTestVM1$VM;
         6: astore_3      
         7: iload_2       
         8: ifeq          39
        11: aload_0       
        12: aload_3       
        13: invokevirtual #5                  // Method releaseVM:(LTestVM1$VM;)V
        16: aload_0       
        17: invokevirtual #4                  // Method createVM:()LTestVM1$VM;
        20: astore        4
        22: aload_0       
        23: invokevirtual #4                  // Method createVM:()LTestVM1$VM;
        26: astore_3      
        27: aload_0       
        28: aload         4
        30: invokevirtual #5                  // Method releaseVM:(LTestVM1$VM;)V
        33: iinc          2, -1
        36: goto          7
        39: return        
      LineNumberTable:
        line 16: 0
        line 17: 2
        line 18: 7
        line 20: 11
        line 21: 16
        line 22: 22
        line 23: 27
        line 25: 33
        line 27: 36
        line 29: 39
      StackMapTable: number_of_entries = 2
           frame_type = 253 /* append */
             offset_delta = 7
        locals = [ int, class TestVM1$VM ]
           frame_type = 31 /* same */

}
